{"version":3,"sources":["theme/theme.ts","hooks/useMessage.ts","components/atoms/button/PrimaryButton.tsx","components/pages/Login.tsx","hooks/useAuth.ts","components/pages/Page505.tsx","components/atoms/button/MenuIconButton.tsx","components/molecules/MenuDrawer.tsx","components/organisms/layouts/Header.tsx","components/templates/HeaderLayout.tsx","components/pages/Home.tsx","components/pages/Setting.tsx","components/organisms/user/UserCard.tsx","components/organisms/user/UserDetailModal.tsx","components/pages/UserManagement.tsx","hooks/useAllUsers.ts","hooks/useSelectUser.ts","router/HomeRoutes.tsx","router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","extendTheme","styles","global","body","backgroundColor","color","useMessage","toast","useToast","showMessage","useCallback","props","title","status","position","duration","isClosable","PrimaryButton","memo","children","disabled","loading","onClick","bg","_hover","opacity","isLoading","Login","history","useHistory","useState","setLoading","login","id","axios","get","then","res","data","push","catch","finally","useAuth","userId","setUserId","align","justify","height","w","p","borderRadius","shadow","as","size","textAlign","my","spacing","py","px","placeholder","value","onChange","e","target","Page404","MenuIconButton","onOpen","aria-label","icon","Hamburger","variant","display","base","md","MenuDrawer","onClose","isOpen","onClickHome","onClickUserManagement","onClickSetting","placement","Header","useDisclosure","padding","mr","cursor","fontSize","flexGrow","pr","HeaderLayout","Home","Setting","UserCard","imageUrl","userName","fullName","h","boxSize","src","alt","m","fontWeight","UserDetailModal","user","autoFocus","motionPreset","pb","mx","username","isReadOnly","name","email","phone","UserManagement","users","setUsers","getUsers","userAllUsers","selectedUser","setSelectedUser","onSelectUser","targetUser","find","useSelectUser","useEffect","console","log","onClickUser","map","HomeRoutes","path","exact","Router","render","url","match","route","App","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.450754b4.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.100\",\n        color: \"gray.800\"\n      }\n    }\n  }\n});\n\nexport default theme","import { useToast } from \"@chakra-ui/toast\";\nimport { useCallback } from \"react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n}\n\nexport const useMessage = () => {\n  const toast = useToast();\n\n  const showMessage = useCallback((props: Props) => {\n    const { title, status } = props;\n    toast({\n      title,\n      status,\n      position: \"top\",\n      duration: 2000,\n      isClosable: true\n    })\n  }, []);\n  return { showMessage }\n}","import { Button } from \"@chakra-ui/button\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  disabled?: boolean;\n  loading?: boolean;\n  onClick: () => void;\n}\n\nexport const PrimaryButton: VFC<Props> = memo((props) => {\n  const { children, disabled = false, loading = false , onClick } = props;\n\n  return (\n    <Button \n    bg=\"teal.400\" \n    color=\"white\" \n    _hover={{ opacity: 0.8 }} \n    onClick={onClick}\n    disabled={disabled || loading}\n    isLoading={loading}\n    >{children}</Button>\n\n  )\n})","import { Input } from \"@chakra-ui/input\";\nimport { Box, Divider, Flex, Heading, Stack } from \"@chakra-ui/layout\";\nimport { ChangeEvent, memo, useState, VFC } from \"react\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\n\nexport const Login: VFC = memo(() => {\n\n  const { login, loading } = useAuth(); \n\n  const [ userId, setUserId ] = useState('');\n\n  const onChangeUserId = (e: ChangeEvent<HTMLInputElement>) => setUserId(e.target.value);\n\n  const onClickLogin = () => login(userId);\n\n  return (\n    <Flex align=\"center\" justify=\"center\" height=\"100vh\">\n      <Box bg=\"white\" w=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"center\">ユーザー管理アプリ</Heading>\n        <Divider my={4} />\n        <Stack spacing={8} py={4} px={10}>\n          <Input placeholder=\"ユーザーID\" value={userId} onChange={onChangeUserId} />\n          <PrimaryButton disabled={userId === \"\"} onClick={onClickLogin} loading={loading} >ログイン</PrimaryButton>\n        </Stack>\n      </Box>\n    </Flex>\n  )\n});","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { User } from \"../types/user\";\nimport { useMessage } from \"./useMessage\";\n\nexport const useAuth = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n\n  const [ loading, setLoading ] = useState(false);\n\n  const login = useCallback((id: string) => {\n    setLoading(true);\n\n    axios.get<User>(`https://jsonplaceholder.typicode.com/users/${id}`).then((res) => {\n      if(res.data){\n        showMessage({ title: \"ログインしました\", status: \"success\" });\n        history.push(\"/home\");\n      }else{\n        showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" })\n      }\n    }).catch(() => showMessage({ title: \"ログインできません\", status: \"error\" })).finally(() => setLoading(false));\n  }, [history, showMessage]);\n\n  return { login, loading }\n}","import { memo, VFC } from \"react\";\n\nexport const Page404: VFC = memo(() => {\n  return <p>404ページです</p>\n});","import { IconButton } from \"@chakra-ui/button\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n  onOpen: () => void;\n}\n\nexport const MenuIconButton: VFC<Props> = memo((props) => {\n  const { onOpen } = props;\n\n  return (\n    <IconButton aria-label=\"メニューボタン\" icon={ <HamburgerIcon /> } size=\"sm\" variant=\"unstyled\" display={{ base: \"block\" , md: \"none\" }} onClick={onOpen} />\n\n  )\n})","import { Button } from \"@chakra-ui/button\";\nimport { Drawer, DrawerBody, DrawerContent, DrawerOverlay } from \"@chakra-ui/modal\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n  onClickHome: () => void;\n  onClickUserManagement: () => void;\n  onClickSetting: () => void;\n}\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const { onClose, isOpen, onClickHome, onClickUserManagement, onClickSetting } = props;\n\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n    <DrawerOverlay>\n      <DrawerContent>\n        <DrawerBody p={0} bg=\"gray.100\">\n          <Button w=\"100%\" onClick={onClickHome}>TOP</Button>\n          <Button w=\"100%\" onClick={onClickUserManagement}>ユーザー一覧</Button>\n          <Button w=\"100%\" onClick={onClickSetting}>設定</Button>\n        </DrawerBody>\n      </DrawerContent>\n    </DrawerOverlay>\n  </Drawer>\n  )\n})","import { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Box, Flex, Heading, Link } from \"@chakra-ui/layout\";\nimport { memo, useCallback, VFC } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { MenuIconButton } from \"../../atoms/button/MenuIconButton\";\nimport { MenuDrawer } from \"../../molecules/MenuDrawer\";\n\nexport const Header: VFC = memo(() => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const onClickHome = useCallback(() => history.push(\"/home\"), [history]);\n  const onClickUserManagement = useCallback(() => history.push(\"/home/user_management\"), [history]);\n  const onClickSetting = useCallback(() => history.push(\"/home/setting\"), [history]);\n\n  return (\n    <>\n    <Flex\n      as=\"nav\"\n      bg=\"teal.500\"\n      color=\"gray.50\"\n      align=\"center\"\n      justify=\"space-between\"\n      padding={{ base: 3, md: 5 }}\n    >\n      <Flex align=\"center\" as=\"a\" mr={8} _hover={{ cursor: \"pointer\" }} onClick={onClickHome}>\n        <Heading as=\"h1\" fontSize={{ base: \"md\", md: \"lg\" }}>ユーザー管理アプリ</Heading>\n      </Flex>\n      <Flex align=\"center\" fontSize=\"sm\" flexGrow={2} display={{ base: \"none\", md: \"flex\" }}>\n        <Box pr={4}>\n          <Link onClick={onClickUserManagement}>ユーザー一覧</Link>\n        </Box>\n        <Link onClick={onClickSetting}>設定</Link>\n      </Flex>\n      <MenuIconButton onOpen={onOpen} />\n    </Flex>\n    <MenuDrawer onClose={onClose} isOpen={isOpen} onClickHome={onClickHome} onClickUserManagement={onClickUserManagement} onClickSetting={onClickSetting} />\n    </>\n  )\n});","import { memo, ReactNode, VFC } from \"react\";\nimport { Header } from \"../organisms/layouts/Header\";\n\ntype Props = {\n  children : ReactNode;\n}\n\nexport const HeaderLayout: VFC<Props> = memo((props) => {\n  const { children } = props;\n\n  return (\n    <>\n      <Header />\n      { children }\n    </>\n  )\n});","import { memo, VFC } from \"react\";\n\nexport const Home: VFC = memo(() => {\n  return <p>ホームページです</p>\n});","import { memo, VFC } from \"react\";\n\nexport const Setting: VFC = memo(() => {\n  return <p>セッティングページです</p>\n});","import { Image } from \"@chakra-ui/image\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n  id: number;\n  imageUrl: string;\n  userName: string;\n  fullName: string;\n  onClick: (id: number) => void;\n}\n\nexport const UserCard: VFC<Props> = memo((props) => {\n  const { id, imageUrl, userName, fullName, onClick } = props;\n\n  return (\n    <Box _hover={{ cursor: \"pointer\", opacity: 0.8 }} p={4} w=\"260px\" h=\"260px\" bg=\"white\" borderRadius=\"10px\" shadow=\"md\" onClick={ () => onClick(id) }>\n    <Stack textAlign=\"center\">\n      <Image boxSize=\"160px\" borderRadius=\"full\" src={imageUrl} alt={userName} m=\"auto\" />\n      <Text fontSize=\"lg\" fontWeight=\"bold\" >{userName}</Text>\n      <Text fontSize=\"sm\" color=\"gray\" >{fullName}</Text>\n    </Stack>\n  </Box>\n  )\n})","import { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\nimport { memo, ReactNode, VFC } from \"react\";\nimport { User } from \"../../../types/user\";\n\ntype Props = {\n  user: User | null;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const UserDetailModal: VFC<Props> = memo((props) => {\n  const { user, isOpen, onClose } = props;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} autoFocus={false} motionPreset=\"slideInBottom\" >\n          <ModalOverlay>\n            <ModalContent pb={6}>\n              <ModalHeader>ユーザー詳細</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody mx={4}>\n                <Stack spacing={4}>\n                  <FormControl>\n                    <FormLabel>名前</FormLabel>\n                    <Input value={user?.username} isReadOnly />\n                  </FormControl>\n                  <FormControl>\n                    <FormLabel>フルネーム</FormLabel>\n                    <Input value={user?.name} isReadOnly />\n                  </FormControl>\n                  <FormControl>\n                    <FormLabel>MAIL</FormLabel>\n                    <Input value={user?.email} isReadOnly />\n                  </FormControl>\n                  <FormControl>\n                    <FormLabel>TEL</FormLabel>\n                    <Input value={user?.phone} isReadOnly />\n                  </FormControl>\n                </Stack>\n              </ModalBody>\n            </ModalContent>\n          </ModalOverlay>\n        </Modal>\n  )\n})","import { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Center, Wrap, WrapItem } from \"@chakra-ui/layout\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { memo, useCallback, useEffect, VFC } from \"react\";\nimport { userAllUsers } from \"../../hooks/useAllUsers\";\nimport { useSelectUser } from \"../../hooks/useSelectUser\";\nimport { UserCard } from \"../organisms/user/UserCard\";\nimport { UserDetailModal } from \"../organisms/user/UserDetailModal\";\n\nexport const UserManagement: VFC = memo(() => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { getUsers, loading, users } = userAllUsers();\n  const { onSelectUser, selectedUser } = useSelectUser();\n\n  useEffect(() => getUsers(), []);\n\n  console.log(selectedUser);\n\n  const onClickUser = (id: number) => {\n    onSelectUser({ id, users, onOpen });\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Center h=\"100vh\">\n          <Spinner />\n        </Center>\n      )\n        : (\n          <Wrap p={{ base: 4, md: 10 }} justify=\"center\">\n            {users.map((user) => (\n              <WrapItem key={user.id} mx=\"auto\">\n                <UserCard id={user.id} imageUrl={\"https://source.unsplash.com/random\"} userName={user.username} fullName={user.name} onClick={onClickUser} />\n              </WrapItem>\n            ))}\n          </Wrap>\n        )}\n      <UserDetailModal user={selectedUser} isOpen={isOpen} onClose={onClose} />\n    </>\n  )\n});","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { User } from \"../types/user\";\nimport { useMessage } from \"./useMessage\";\n\nexport const userAllUsers = () => {\n  const { showMessage } = useMessage();\n\n  const [ loading, setLoading ] = useState(false);\n  const [ users, setUsers ] = useState<Array<User>>([]);\n\n  const getUsers = useCallback(() => {\n    setLoading(true)\n\n    axios.get<Array<User>>(\"https://jsonplaceholder.typicode.com/users\")\n    .then((res) => setUsers(res.data))\n    .catch(() => {\n      showMessage({ title: \"ユーザー取得に失敗しました\", status: \"error\" })\n    }).finally(() => {\n      setLoading(false)\n    });\n  },[]);\n\n    return { getUsers, loading, users }\n}","import { useCallback, useState } from \"react\"\nimport { User } from \"../types/user\";\n\ntype Props = {\n  id: number;\n  users: Array<User>;\n  onOpen: () => void;\n}\n\nexport const useSelectUser = () => {\n  const [ selectedUser, setSelectedUser ] = useState<User | null>(null);\n\n  const onSelectUser = useCallback((props: Props) => {\n    const { id, users, onOpen } = props;\n    const targetUser = users.find((user) => user.id === id);\n    setSelectedUser(targetUser!);\n    onOpen();\n  }, []);\n  return { onSelectUser, selectedUser };\n};","import { Home } from \"../components/pages/Home\";\nimport { Page404 } from \"../components/pages/Page505\";\nimport { Setting } from \"../components/pages/Setting\";\nimport { UserManagement } from \"../components/pages/UserManagement\";\n\nexport const HomeRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    children: <Home />\n  },\n  {\n    path: \"/user_management\",\n    exact: false,\n    children: <UserManagement />\n  },\n  {\n    path: \"/setting\",\n    exact: false,\n    children: <Setting />\n  },\n  {\n    path: \"*\",\n    exact: false,\n    children: <Page404 />\n  },\n]","import { memo, VFC } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { Login } from \"../components/pages/Login\";\nimport { Page404 } from \"../components/pages/Page505\";\nimport { HeaderLayout } from \"../components/templates/HeaderLayout\";\nimport { HomeRoutes } from \"./HomeRoutes\";\n\nexport const Router: VFC = memo(() => {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Login />\n      </Route>\n      <Route path=\"/home\" render={({  match: { url }}) => (\n        <Switch>\n          {HomeRoutes.map((route) => (\n            <Route \n            key={route.path} \n            exact={route.exact} \n            path={`${url}${route.path}`}>\n              <HeaderLayout>{route.children}</HeaderLayout>\n            </Route>\n          ))}\n        </Switch>\n      )} />\n      <Route path=\"*\">\n        <Page404 />\n      </Route>\n    </Switch>\n  )\n})","import React from 'react';\nimport './App.css';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport theme from './theme/theme';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Router } from './router/Router';\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Router />\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}