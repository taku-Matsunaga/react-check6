{"version":3,"sources":["theme/theme.ts","providers/LoginUserProvider.tsx","hooks/useLoginUser.ts","hooks/useMessage.ts","components/atoms/button/PrimaryButton.tsx","components/pages/Login.tsx","hooks/useAuth.ts","components/pages/Page505.tsx","components/atoms/button/MenuIconButton.tsx","components/molecules/MenuDrawer.tsx","components/organisms/layouts/Header.tsx","components/templates/HeaderLayout.tsx","components/pages/Home.tsx","components/pages/Setting.tsx","components/organisms/user/UserCard.tsx","components/organisms/user/UserDetailModal.tsx","components/pages/UserManagement.tsx","hooks/useAllUsers.ts","hooks/useSelectUser.ts","router/HomeRoutes.tsx","router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","extendTheme","styles","global","body","backgroundColor","color","LoginUserContext","createContext","LoginUserProvider","props","children","useState","loginUser","setLoginUser","Provider","value","useLoginUser","useContext","useMessage","toast","useToast","showMessage","useCallback","title","status","position","duration","isClosable","PrimaryButton","memo","disabled","loading","onClick","bg","_hover","opacity","isLoading","Login","history","useHistory","setLoading","login","id","axios","get","then","res","data","isAdmin","push","catch","useAuth","userId","setUserId","align","justify","height","w","p","borderRadius","shadow","as","size","textAlign","my","spacing","py","px","placeholder","onChange","e","target","Page404","MenuIconButton","onOpen","aria-label","icon","Hamburger","variant","display","base","md","MenuDrawer","onClose","isOpen","onClickHome","onClickUserManagement","onClickSetting","placement","Header","useDisclosure","padding","mr","cursor","fontSize","flexGrow","pr","HeaderLayout","Home","Setting","UserCard","imageUrl","userName","fullName","h","boxSize","src","alt","m","fontWeight","UserDetailModal","user","username","setUsername","name","setName","email","setEmail","phone","setPhone","useEffect","autoFocus","motionPreset","pb","mx","isReadOnly","alert","UserManagement","users","setUsers","getUsers","finally","userAllUsers","selectedUser","setSelectedUser","onSelectUser","targetUser","find","useSelectUser","onClickUser","console","log","map","HomeRoutes","path","exact","Router","render","url","match","route","App","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.318f7d9c.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.100\",\n        color: \"gray.800\"\n      }\n    }\n  }\n});\n\nexport default theme","import { createContext, Dispatch, ReactNode, SetStateAction, useState} from \"react\";\nimport { User } from \"../types/user\";\n\ntype LoginUser = User & { isAdmin: boolean };\n\nexport type LoginUserContextType = {\n  loginUser: LoginUser | null;\n  setLoginUser: Dispatch<SetStateAction<LoginUser | null>>\n}\n\nexport const LoginUserContext = createContext<LoginUserContextType>({} as LoginUserContextType);\n\nexport const LoginUserProvider = (props: { children: ReactNode }) => {\n  const { children } = props;\n  const [ loginUser, setLoginUser ]  = useState<LoginUser | null>(null);\n\n  return (\n    <LoginUserContext.Provider value={{ loginUser, setLoginUser }}>\n      {children}\n    </LoginUserContext.Provider>\n  )\n}","import { useContext } from \"react\";\n\nimport { LoginUserContext, LoginUserContextType } from \"../providers/LoginUserProvider\"\n\nexport const useLoginUser = (): LoginUserContextType => useContext(LoginUserContext)","import { useToast } from \"@chakra-ui/toast\";\nimport { useCallback } from \"react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n}\n\nexport const useMessage = () => {\n  const toast = useToast();\n\n  const showMessage = useCallback((props: Props) => {\n    const { title, status } = props;\n    toast({\n      title,\n      status,\n      position: \"top\",\n      duration: 2000,\n      isClosable: true\n    })\n  }, []);\n  return { showMessage }\n}","import { Button } from \"@chakra-ui/button\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n  disabled?: boolean;\n  loading?: boolean;\n  onClick: () => void;\n}\n\nexport const PrimaryButton: VFC<Props> = memo((props) => {\n  const { children, disabled = false, loading = false , onClick } = props;\n\n  return (\n    <Button \n    bg=\"teal.400\" \n    color=\"white\" \n    _hover={{ opacity: 0.8 }} \n    onClick={onClick}\n    disabled={disabled || loading}\n    isLoading={loading}\n    >{children}</Button>\n\n  )\n})","import { Input } from \"@chakra-ui/input\";\nimport { Box, Divider, Flex, Heading, Stack } from \"@chakra-ui/layout\";\nimport { ChangeEvent, memo, useState, VFC } from \"react\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\n\nexport const Login: VFC = memo(() => {\n\n  const { login, loading } = useAuth(); \n\n  const [ userId, setUserId ] = useState('');\n\n  const onChangeUserId = (e: ChangeEvent<HTMLInputElement>) => setUserId(e.target.value);\n\n  const onClickLogin = () => login(userId);\n\n  return (\n    <Flex align=\"center\" justify=\"center\" height=\"100vh\">\n      <Box bg=\"white\" w=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"center\">ユーザー管理アプリ</Heading>\n        <Divider my={4} />\n        <Stack spacing={8} py={4} px={10}>\n          <Input placeholder=\"ユーザーID\" value={userId} onChange={onChangeUserId} />\n          <PrimaryButton disabled={userId === \"\"} onClick={onClickLogin} loading={loading} >ログイン</PrimaryButton>\n        </Stack>\n      </Box>\n    </Flex>\n  )\n});","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { useHistory } from \"react-router\";\nimport { User } from \"../types/user\";\nimport { useLoginUser } from \"./useLoginUser\";\nimport { useMessage } from \"./useMessage\";\n\nexport const useAuth = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const { setLoginUser } = useLoginUser();\n\n  const [loading, setLoading] = useState(false);\n\n  const login = useCallback((id: string) => {\n    setLoading(true);\n\n    axios.get<User>(`https://jsonplaceholder.typicode.com/users/${id}`).then((res) => {\n      if (res.data) {\n        const isAdmin = res.data.id === 10 ? true : false;\n        setLoginUser({...res.data, isAdmin});\n        showMessage({ title: \"ログインしました\", status: \"success\" });\n        history.push(\"/home\");\n      } else {\n        showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\n        setLoading(false);\n      }\n    }).catch(() => {\n      showMessage({ title: \"ログインできません\", status: \"error\" });\n      setLoading(false);\n    }\n    );\n  }, [history, showMessage, setLoginUser]);\n\n  return { login, loading }\n}","import { memo, VFC } from \"react\";\n\nexport const Page404: VFC = memo(() => {\n  return <p>404ページです</p>\n});","import { IconButton } from \"@chakra-ui/button\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n  onOpen: () => void;\n}\n\nexport const MenuIconButton: VFC<Props> = memo((props) => {\n  const { onOpen } = props;\n\n  return (\n    <IconButton aria-label=\"メニューボタン\" icon={ <HamburgerIcon /> } size=\"sm\" variant=\"unstyled\" display={{ base: \"block\" , md: \"none\" }} onClick={onOpen} />\n\n  )\n})","import { Button } from \"@chakra-ui/button\";\nimport { Drawer, DrawerBody, DrawerContent, DrawerOverlay } from \"@chakra-ui/modal\";\nimport { memo, VFC } from \"react\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n  onClickHome: () => void;\n  onClickUserManagement: () => void;\n  onClickSetting: () => void;\n}\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const { onClose, isOpen, onClickHome, onClickUserManagement, onClickSetting } = props;\n\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n    <DrawerOverlay>\n      <DrawerContent>\n        <DrawerBody p={0} bg=\"gray.100\">\n          <Button w=\"100%\" onClick={onClickHome}>TOP</Button>\n          <Button w=\"100%\" onClick={onClickUserManagement}>ユーザー一覧</Button>\n          <Button w=\"100%\" onClick={onClickSetting}>設定</Button>\n        </DrawerBody>\n      </DrawerContent>\n    </DrawerOverlay>\n  </Drawer>\n  )\n})","import { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Box, Flex, Heading, Link } from \"@chakra-ui/layout\";\nimport { memo, useCallback, VFC } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { MenuIconButton } from \"../../atoms/button/MenuIconButton\";\nimport { MenuDrawer } from \"../../molecules/MenuDrawer\";\n\nexport const Header: VFC = memo(() => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const onClickHome = useCallback(() => history.push(\"/home\"), [history]);\n  const onClickUserManagement = useCallback(() => history.push(\"/home/user_management\"), [history]);\n  const onClickSetting = useCallback(() => history.push(\"/home/setting\"), [history]);\n\n  return (\n    <>\n    <Flex\n      as=\"nav\"\n      bg=\"teal.500\"\n      color=\"gray.50\"\n      align=\"center\"\n      justify=\"space-between\"\n      padding={{ base: 3, md: 5 }}\n    >\n      <Flex align=\"center\" as=\"a\" mr={8} _hover={{ cursor: \"pointer\" }} onClick={onClickHome}>\n        <Heading as=\"h1\" fontSize={{ base: \"md\", md: \"lg\" }}>ユーザー管理アプリ</Heading>\n      </Flex>\n      <Flex align=\"center\" fontSize=\"sm\" flexGrow={2} display={{ base: \"none\", md: \"flex\" }}>\n        <Box pr={4}>\n          <Link onClick={onClickUserManagement}>ユーザー一覧</Link>\n        </Box>\n        <Link onClick={onClickSetting}>設定</Link>\n      </Flex>\n      <MenuIconButton onOpen={onOpen} />\n    </Flex>\n    <MenuDrawer onClose={onClose} isOpen={isOpen} onClickHome={onClickHome} onClickUserManagement={onClickUserManagement} onClickSetting={onClickSetting} />\n    </>\n  )\n});","import { memo, ReactNode, VFC } from \"react\";\nimport { Header } from \"../organisms/layouts/Header\";\n\ntype Props = {\n  children : ReactNode;\n}\n\nexport const HeaderLayout: VFC<Props> = memo((props) => {\n  const { children } = props;\n\n  return (\n    <>\n      <Header />\n      { children }\n    </>\n  )\n});","import { memo, VFC } from \"react\";\n\nexport const Home: VFC = memo(() => {\n  return <p>ホームページです</p>\n});","import { memo, VFC } from \"react\";\n\nexport const Setting: VFC = memo(() => {\n  return <p>セッティングページです</p>\n});","import { Image } from \"@chakra-ui/image\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { memo, ReactNode, VFC } from \"react\";\n\ntype Props = {\n  id: number;\n  imageUrl: string;\n  userName: string;\n  fullName: string;\n  onClick: (id: number) => void;\n}\n\nexport const UserCard: VFC<Props> = memo((props) => {\n  const { id, imageUrl, userName, fullName, onClick } = props;\n\n  return (\n    <Box _hover={{ cursor: \"pointer\", opacity: 0.8 }} p={4} w=\"260px\" h=\"260px\" bg=\"white\" borderRadius=\"10px\" shadow=\"md\" onClick={ () => onClick(id) }>\n    <Stack textAlign=\"center\">\n      <Image boxSize=\"160px\" borderRadius=\"full\" src={imageUrl} alt={userName} m=\"auto\" />\n      <Text fontSize=\"lg\" fontWeight=\"bold\" >{userName}</Text>\n      <Text fontSize=\"sm\" color=\"gray\" >{fullName}</Text>\n    </Stack>\n  </Box>\n  )\n})","import { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Image } from \"@chakra-ui/image\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\nimport { ChangeEvent, memo, ReactNode, useEffect, useState, VFC } from \"react\";\nimport { User } from \"../../../types/user\";\nimport { PrimaryButton } from \"../../atoms/button/PrimaryButton\";\n\ntype Props = {\n  user: User | null;\n  isOpen: boolean;\n  isAdmin?: boolean;\n  onClose: () => void;\n}\n\nexport const UserDetailModal: VFC<Props> = memo((props) => {\n  const { user, isOpen, isAdmin, onClose } = props;\n\n  const [ username, setUsername ] = useState(\"\");\n  const [ name, setName ] = useState(\"\");\n  const [ email, setEmail ] = useState(\"\");\n  const [ phone, setPhone ] = useState(\"\");\n\n  useEffect(() => {\n    setUsername(user?.username ?? '')\n    setName(user?.name ?? '')\n    setEmail(user?.email ?? '')\n    setPhone(user?.phone ?? '')\n  }, [user])\n\n  const onChangeUserName = (e: ChangeEvent<HTMLInputElement>) => setUsername(e.target.value);\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => setName(e.target.value);\n  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value);\n  const onChangePhone = (e: ChangeEvent<HTMLInputElement>) => setPhone(e.target.value);\n\n  const onClickUpdate = () => alert();\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} autoFocus={false} motionPreset=\"slideInBottom\" >\n      <ModalOverlay>\n        <ModalContent pb={6}>\n          <ModalHeader>ユーザー詳細</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody mx={4}>\n            <Stack spacing={4}>\n              <FormControl>\n                <FormLabel>名前</FormLabel>\n                <Input onChange={onChangeUserName} value={username} isReadOnly={!isAdmin} />\n              </FormControl>\n              <FormControl>\n                <FormLabel>フルネーム</FormLabel>\n                <Input onChange={onChangeName} value={name} isReadOnly={!isAdmin} />\n              </FormControl>\n              <FormControl>\n                <FormLabel>MAIL</FormLabel>\n                <Input onChange={onChangeEmail} value={email} isReadOnly={!isAdmin} />\n              </FormControl>\n              <FormControl>\n                <FormLabel>TEL</FormLabel>\n                <Input onChange={onChangePhone} value={phone} isReadOnly={!isAdmin} />\n              </FormControl>\n            </Stack>\n          </ModalBody>\n          {isAdmin && (\n            <ModalFooter>\n              <PrimaryButton onClick={onClickUpdate}>更新</PrimaryButton>\n            </ModalFooter>\n          )}\n        </ModalContent>\n      </ModalOverlay>\n    </Modal>\n  )\n})","import { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Center, Wrap, WrapItem } from \"@chakra-ui/layout\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { memo, useCallback, useEffect, VFC } from \"react\";\nimport { userAllUsers } from \"../../hooks/useAllUsers\";\nimport { useLoginUser } from \"../../hooks/useLoginUser\";\nimport { useSelectUser } from \"../../hooks/useSelectUser\";\nimport { UserCard } from \"../organisms/user/UserCard\";\nimport { UserDetailModal } from \"../organisms/user/UserDetailModal\";\n\nexport const UserManagement: VFC = memo(() => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { getUsers, loading, users } = userAllUsers();\n  const { onSelectUser, selectedUser } = useSelectUser();\n  const { loginUser } = useLoginUser();\n\n  useEffect(() => getUsers(), []);\n\n  const onClickUser = (id: number) => {\n    onSelectUser({ id, users, onOpen });\n  };\n\n  console.log(loginUser);\n\n  return (\n    <>\n      {loading ? (\n        <Center h=\"100vh\">\n          <Spinner />\n        </Center>\n      )\n        : (\n          <Wrap p={{ base: 4, md: 10 }} justify=\"center\">\n            {users.map((user) => (\n              <WrapItem key={user.id} mx=\"auto\">\n                <UserCard id={user.id} imageUrl={\"https://source.unsplash.com/random\"} userName={user.username} fullName={user.name} onClick={onClickUser} />\n              </WrapItem>\n            ))}\n          </Wrap>\n        )}\n      <UserDetailModal user={selectedUser} isOpen={isOpen} onClose={onClose} isAdmin={loginUser?.isAdmin} />\n    </>\n  )\n});","import axios from \"axios\";\nimport { useCallback, useState } from \"react\"\nimport { User } from \"../types/user\";\nimport { useMessage } from \"./useMessage\";\n\nexport const userAllUsers = () => {\n  const { showMessage } = useMessage();\n\n  const [ loading, setLoading ] = useState(false);\n  const [ users, setUsers ] = useState<Array<User>>([]);\n\n  const getUsers = useCallback(() => {\n    setLoading(true)\n\n    axios.get<Array<User>>(\"https://jsonplaceholder.typicode.com/users\")\n    .then((res) => setUsers(res.data))\n    .catch(() => {\n      showMessage({ title: \"ユーザー取得に失敗しました\", status: \"error\" })\n    }).finally(() => {\n      setLoading(false)\n    });\n  },[]);\n\n    return { getUsers, loading, users }\n}","import { useCallback, useState } from \"react\"\nimport { User } from \"../types/user\";\n\ntype Props = {\n  id: number;\n  users: Array<User>;\n  onOpen: () => void;\n}\n\nexport const useSelectUser = () => {\n  const [ selectedUser, setSelectedUser ] = useState<User | null>(null);\n\n  const onSelectUser = useCallback((props: Props) => {\n    const { id, users, onOpen } = props;\n    const targetUser = users.find((user) => user.id === id);\n    setSelectedUser(targetUser!);\n    onOpen();\n  }, []);\n  return { onSelectUser, selectedUser };\n};","import { Home } from \"../components/pages/Home\";\nimport { Page404 } from \"../components/pages/Page505\";\nimport { Setting } from \"../components/pages/Setting\";\nimport { UserManagement } from \"../components/pages/UserManagement\";\n\nexport const HomeRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    children: <Home />\n  },\n  {\n    path: \"/user_management\",\n    exact: false,\n    children: <UserManagement />\n  },\n  {\n    path: \"/setting\",\n    exact: false,\n    children: <Setting />\n  },\n  {\n    path: \"*\",\n    exact: false,\n    children: <Page404 />\n  },\n]","import { memo, VFC } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { Login } from \"../components/pages/Login\";\nimport { Page404 } from \"../components/pages/Page505\";\nimport { HeaderLayout } from \"../components/templates/HeaderLayout\";\nimport { LoginUserProvider } from \"../providers/LoginUserProvider\";\nimport { HomeRoutes } from \"./HomeRoutes\";\n\nexport const Router: VFC = memo(() => {\n  return (\n    <Switch>\n      <LoginUserProvider>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/home\" render={({ match: { url } }) => (\n          <Switch>\n            {HomeRoutes.map((route) => (\n              <Route\n                key={route.path}\n                exact={route.exact}\n                path={`${url}${route.path}`}>\n                <HeaderLayout>{route.children}</HeaderLayout>\n              </Route>\n            ))}\n          </Switch>\n        )} />\n      </LoginUserProvider>\n      <Route path=\"*\">\n        <Page404 />\n      </Route>\n    </Switch>\n  )\n})","import React from 'react';\nimport './App.css';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport theme from './theme/theme';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Router } from './router/Router';\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Router />\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}